{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TestGroup = _resolveComponent(\"TestGroup\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.testGroups, group => {\n    return _openBlock(), _createBlock(_component_TestGroup, {\n      key: group.id,\n      group: group\n    }, null, 8 /* PROPS */, [\"group\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","testGroups","group","_createBlock","_component_TestGroup","key"],"sources":["/Users/rika/work/src/auto-test/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <TestGroup v-for=\"group in testGroups\" :key=\"group.id\" :group=\"group\" />\n  </div>\n</template>\n\n<script>\nimport TestGroup from './components/TestGroup.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    TestGroup\n  },\n  data() {\n    return {\n      testGroups: [\n        {\n          id: 1,\n          name: \"测试组1\",\n          testCases: [\n            { name: \"测试用例1\", status: \"idle\" },\n            { name: \"测试用例2\", status: \"idle\" }\n          ]\n        },\n        {\n          id: 2,\n          name: \"测试组2\",\n          testCases: [\n            { name: \"测试用例1\", status: \"idle\" },\n            { name: \"测试用例2\", status: \"idle\" }\n          ]\n        },\n      ]\n    }\n  }\n}\n</script>"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;uBAAbC,mBAAA,CAEM,OAFNC,UAEM,I,kBADJD,mBAAA,CAAwEE,SAAA,QAF5EC,WAAA,CAE+BC,KAAA,CAAAC,UAAU,EAAnBC,KAAK;yBAAvBC,YAAA,CAAwEC,oBAAA;MAAhCC,GAAG,EAAEH,KAAK,CAACP,EAAE;MAAGO,KAAK,EAAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}