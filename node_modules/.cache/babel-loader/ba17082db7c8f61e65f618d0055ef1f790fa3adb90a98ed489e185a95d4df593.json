{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport TestGroup from './components/TestGroup.vue';\nexport default {\n  name: 'App',\n  components: {\n    TestGroup\n  },\n  setup() {\n    const testGroups = ref([]);\n    const testGroupsLoaded = ref(false);\n    const loadTestGroups = () => {\n      // 模拟异步加载数据\n      setTimeout(() => {\n        testGroups.value = [{\n          id: 1,\n          name: \"功能测试\",\n          testCases: [{\n            id: 1,\n            name: \"登录测试\",\n            status: \"idle\"\n          }, {\n            id: 2,\n            name: \"注册测试\",\n            status: \"idle\"\n          }, {\n            id: 3,\n            name: \"搜索测试\",\n            status: \"idle\"\n          }]\n        }, {\n          id: 2,\n          name: \"性能测试\",\n          testCases: [{\n            id: 4,\n            name: \"加载速度测试\",\n            status: \"idle\"\n          }, {\n            id: 5,\n            name: \"并发用户测试\",\n            status: \"idle\"\n          }]\n        }];\n        testGroupsLoaded.value = true;\n      }, 1000);\n    };\n    onMounted(loadTestGroups);\n    return {\n      testGroups,\n      testGroupsLoaded\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","TestGroup","name","components","setup","testGroups","testGroupsLoaded","loadTestGroups","setTimeout","value","id","testCases","status"],"sources":["/Users/rika/work/src/auto-test/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>测试运行器</h1>\n    <div v-if=\"testGroupsLoaded\">\n      <TestGroup\n          v-for=\"group in testGroups\"\n          :key=\"group.id\"\n          :group=\"group\"\n      />\n    </div>\n    <div v-else>\n      加载中...\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport TestGroup from './components/TestGroup.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    TestGroup\n  },\n  setup() {\n    const testGroups = ref([]);\n    const testGroupsLoaded = ref(false);\n\n    const loadTestGroups = () => {\n      // 模拟异步加载数据\n      setTimeout(() => {\n        testGroups.value = [\n          {\n            id: 1,\n            name: \"功能测试\",\n            testCases: [\n              { id: 1, name: \"登录测试\", status: \"idle\" },\n              { id: 2, name: \"注册测试\", status: \"idle\" },\n              { id: 3, name: \"搜索测试\", status: \"idle\" }\n            ]\n          },\n          {\n            id: 2,\n            name: \"性能测试\",\n            testCases: [\n              { id: 4, name: \"加载速度测试\", status: \"idle\" },\n              { id: 5, name: \"并发用户测试\", status: \"idle\" }\n            ]\n          }\n        ];\n        testGroupsLoaded.value = true;\n      }, 1000);\n    };\n\n    onMounted(loadTestGroups);\n\n    return {\n      testGroups,\n      testGroupsLoaded\n    };\n  }\n};\n</script>\n\n<style>\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #f0f2f5;\n  margin: 0;\n  padding: 0;\n}\n\n#app {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nh1 {\n  color: #333;\n  text-align: center;\n}\n</style>"],"mappings":"AAiBA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,OAAOC,SAAQ,MAAO,4BAA4B;AAElD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAIN,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMO,gBAAe,GAAIP,GAAG,CAAC,KAAK,CAAC;IAEnC,MAAMQ,cAAa,GAAIA,CAAA,KAAM;MAC3B;MACAC,UAAU,CAAC,MAAM;QACfH,UAAU,CAACI,KAAI,GAAI,CACjB;UACEC,EAAE,EAAE,CAAC;UACLR,IAAI,EAAE,MAAM;UACZS,SAAS,EAAE,CACT;YAAED,EAAE,EAAE,CAAC;YAAER,IAAI,EAAE,MAAM;YAAEU,MAAM,EAAE;UAAO,CAAC,EACvC;YAAEF,EAAE,EAAE,CAAC;YAAER,IAAI,EAAE,MAAM;YAAEU,MAAM,EAAE;UAAO,CAAC,EACvC;YAAEF,EAAE,EAAE,CAAC;YAAER,IAAI,EAAE,MAAM;YAAEU,MAAM,EAAE;UAAO;QAE1C,CAAC,EACD;UACEF,EAAE,EAAE,CAAC;UACLR,IAAI,EAAE,MAAM;UACZS,SAAS,EAAE,CACT;YAAED,EAAE,EAAE,CAAC;YAAER,IAAI,EAAE,QAAQ;YAAEU,MAAM,EAAE;UAAO,CAAC,EACzC;YAAEF,EAAE,EAAE,CAAC;YAAER,IAAI,EAAE,QAAQ;YAAEU,MAAM,EAAE;UAAO;QAE5C,EACD;QACDN,gBAAgB,CAACG,KAAI,GAAI,IAAI;MAC/B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAEDT,SAAS,CAACO,cAAc,CAAC;IAEzB,OAAO;MACLF,UAAU;MACVC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}