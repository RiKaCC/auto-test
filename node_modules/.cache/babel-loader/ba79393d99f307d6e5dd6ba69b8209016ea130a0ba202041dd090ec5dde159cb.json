{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"app-title\"\n}, \"服务测试系统\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"test-groups\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TestGroup = _resolveComponent(\"TestGroup\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.testGroups, (group, index) => {\n    return _openBlock(), _createBlock(_component_TestGroup, {\n      key: index,\n      group: group\n    }, null, 8 /* PROPS */, [\"group\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["id","_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","testGroups","group","index","_createBlock","_component_TestGroup","key"],"sources":["/Users/rika/work/src/auto-test/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1 class=\"app-title\">服务测试系统</h1>\n    <div class=\"test-groups\">\n      <TestGroup\n          v-for=\"(group, index) in testGroups\"\n          :key=\"index\"\n          :group=\"group\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport TestGroup from './components/TestGroup.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    TestGroup\n  },\n  data() {\n    return {\n      testGroups: [\n        {\n          name: '拉流测试',\n          testCases: [\n            { name: '推流', status: 'idle', result: null },\n            { name: '拉流', status: 'idle', result: null },\n            { name: '拉流探测', status: 'idle', result: null },\n            { name: '断流', status: 'idle', result: null },\n            { name: '重新拉流', status: 'idle', result: null },\n          ]\n        },\n        {\n          name: '新测试组',\n          testCases: [\n            { name: '测试用例1', status: 'idle', result: null },\n            { name: '测试用例2', status: 'idle', result: null },\n            { name: '测试用例3', status: 'idle', result: null },\n          ]\n        }\n      ]\n    }\n  }\n}\n</script>\n\n<style>\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #f0f2f5;\n  margin: 0;\n  padding: 0;\n}\n\n#app {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.app-title {\n  text-align: center;\n  color: #333;\n  margin-bottom: 30px;\n}\n\n.test-groups {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n}\n</style>"],"mappings":";;EACOA,EAAE,EAAC;AAAK;gCACXC,mBAAA,CAAiC;EAA7BC,KAAK,EAAC;AAAW,GAAC,QAAM;;EACvBA,KAAK,EAAC;AAAa;;;uBAF1BC,mBAAA,CASM,OATNC,UASM,GARJC,UAAiC,EACjCJ,mBAAA,CAMM,OANNK,UAMM,I,kBALJH,mBAAA,CAIEI,SAAA,QARRC,WAAA,CAKmCC,KAAA,CAAAC,UAAU,EAL7C,CAKkBC,KAAK,EAAEC,KAAK;yBADxBC,YAAA,CAIEC,oBAAA;MAFGC,GAAG,EAAEH,KAAK;MACVD,KAAK,EAAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}