{"ast":null,"code":"import { ref } from 'vue';\nexport default {\n  name: 'TestGroup',\n  props: {\n    group: {\n      type: Object,\n      required: true\n    },\n    sharedState: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const isRunning = ref(false);\n    const getStatusText = status => {\n      const statusMap = {\n        'idle': '未开始',\n        'running': '进行中',\n        'success': '成功',\n        'failure': '失败'\n      };\n      return statusMap[status] || status;\n    };\n    const runTest = async testCase => {\n      testCase.status = 'running';\n      const result = await testCase.testFunction(props.sharedState);\n      testCase.status = result;\n      testCase.result = result === 'success' ? '测试通过' : '测试失败';\n      return result === 'success';\n    };\n    const runAllTests = async () => {\n      isRunning.value = true;\n      for (let testCase of props.group.testCases) {\n        const success = await runTest(testCase);\n        if (!success) break;\n      }\n      isRunning.value = false;\n    };\n    const runSingleTest = async testCase => {\n      if (isRunning.value || testCase.status === 'running') {\n        return;\n      }\n      await runTest(testCase);\n    };\n    return {\n      isRunning,\n      getStatusText,\n      runAllTests,\n      runSingleTest\n    };\n  }\n};","map":{"version":3,"names":["ref","name","props","group","type","Object","required","sharedState","setup","isRunning","getStatusText","status","statusMap","runTest","testCase","result","testFunction","runAllTests","value","testCases","success","runSingleTest"],"sources":["/Users/rika/work/src/auto-test/src/components/TestGroup.vue"],"sourcesContent":["<template>\n    <div class=\"test-group\">\n        <h3 class=\"group-title\">{{ group.name }}</h3>\n        <div class=\"test-cases\">\n            <div v-for=\"testCase in group.testCases\" :key=\"testCase.id\" class=\"test-case\" :class=\"testCase.status\" @click=\"runSingleTest(testCase)\">\n                <div class=\"test-name\">{{ testCase.name }}</div>\n                <div class=\"test-status\">状态: {{ getStatusText(testCase.status) }}</div>\n                <div class=\"test-result\">结果: {{ testCase.result }}</div>\n            </div>\n        </div>\n        <button class=\"run-all-btn\" @click=\"runAllTests\" :disabled=\"isRunning\">运行所有测试</button>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    name: 'TestGroup',\n    props: {\n        group: {\n            type: Object,\n            required: true\n        },\n        sharedState: {\n            type: Object,\n            required: true\n        }\n    },\n    setup(props) {\n        const isRunning = ref(false);\n\n        const getStatusText = (status) => {\n            const statusMap = {\n                'idle': '未开始',\n                'running': '进行中',\n                'success': '成功',\n                'failure': '失败'\n            };\n            return statusMap[status] || status;\n        };\n\n        const runTest = async (testCase) => {\n            testCase.status = 'running';\n            const result = await testCase.testFunction(props.sharedState);\n            testCase.status = result;\n            testCase.result = result === 'success' ? '测试通过' : '测试失败';\n            return result === 'success';\n        };\n\n        const runAllTests = async () => {\n            isRunning.value = true;\n            for (let testCase of props.group.testCases) {\n                const success = await runTest(testCase);\n                if (!success) break;\n            }\n            isRunning.value = false;\n        };\n\n        const runSingleTest = async (testCase) => {\n            if (isRunning.value || testCase.status === 'running') {\n                return;\n            }\n            await runTest(testCase);\n        };\n\n        return {\n            isRunning,\n            getStatusText,\n            runAllTests,\n            runSingleTest\n        };\n    }\n};\n</script>\n\n<style scoped>\n.test-group {\n    background-color: #ffffff;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    padding: 20px;\n    margin: 20px 0;\n}\n\n.group-title {\n    color: #333;\n    margin-top: 0;\n    margin-bottom: 20px;\n    font-size: 1.5em;\n}\n\n.test-cases {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 15px;\n    margin-bottom: 20px;\n}\n\n.test-case {\n    background-color: #f9f9f9;\n    border-radius: 6px;\n    padding: 15px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.test-case:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.test-case.running {\n    background-color: #fff9c4;\n}\n\n.test-case.success {\n    background-color: #c8e6c9;\n}\n\n.test-case.failure {\n    background-color: #ffcdd2;\n}\n\n.test-name {\n    margin: 0 0 10px 0;\n    font-size: 1.1em;\n    color: #444;\n}\n\n.test-status, .test-result {\n    margin: 5px 0;\n    font-size: 0.9em;\n    color: #666;\n}\n\n.run-all-btn {\n    background-color: #4CAF50;\n    border: none;\n    color: white;\n    padding: 10px 20px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin-top: 10px;\n    cursor: pointer;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n}\n\n.run-all-btn:hover {\n    background-color: #45a049;\n}\n\n.run-all-btn:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n}\n</style>"],"mappings":"AAeA,SAASA,GAAE,QAAS,KAAK;AAEzB,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACHC,KAAK,EAAE;MACHC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd,CAAC;IACDC,WAAW,EAAE;MACTH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDE,KAAKA,CAACN,KAAK,EAAE;IACT,MAAMO,SAAQ,GAAIT,GAAG,CAAC,KAAK,CAAC;IAE5B,MAAMU,aAAY,GAAKC,MAAM,IAAK;MAC9B,MAAMC,SAAQ,GAAI;QACd,MAAM,EAAE,KAAK;QACb,SAAS,EAAE,KAAK;QAChB,SAAS,EAAE,IAAI;QACf,SAAS,EAAE;MACf,CAAC;MACD,OAAOA,SAAS,CAACD,MAAM,KAAKA,MAAM;IACtC,CAAC;IAED,MAAME,OAAM,GAAI,MAAOC,QAAQ,IAAK;MAChCA,QAAQ,CAACH,MAAK,GAAI,SAAS;MAC3B,MAAMI,MAAK,GAAI,MAAMD,QAAQ,CAACE,YAAY,CAACd,KAAK,CAACK,WAAW,CAAC;MAC7DO,QAAQ,CAACH,MAAK,GAAII,MAAM;MACxBD,QAAQ,CAACC,MAAK,GAAIA,MAAK,KAAM,SAAQ,GAAI,MAAK,GAAI,MAAM;MACxD,OAAOA,MAAK,KAAM,SAAS;IAC/B,CAAC;IAED,MAAME,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC5BR,SAAS,CAACS,KAAI,GAAI,IAAI;MACtB,KAAK,IAAIJ,QAAO,IAAKZ,KAAK,CAACC,KAAK,CAACgB,SAAS,EAAE;QACxC,MAAMC,OAAM,GAAI,MAAMP,OAAO,CAACC,QAAQ,CAAC;QACvC,IAAI,CAACM,OAAO,EAAE;MAClB;MACAX,SAAS,CAACS,KAAI,GAAI,KAAK;IAC3B,CAAC;IAED,MAAMG,aAAY,GAAI,MAAOP,QAAQ,IAAK;MACtC,IAAIL,SAAS,CAACS,KAAI,IAAKJ,QAAQ,CAACH,MAAK,KAAM,SAAS,EAAE;QAClD;MACJ;MACA,MAAME,OAAO,CAACC,QAAQ,CAAC;IAC3B,CAAC;IAED,OAAO;MACHL,SAAS;MACTC,aAAa;MACbO,WAAW;MACXI;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}